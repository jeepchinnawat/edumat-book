Traceback (most recent call last):
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/fe/danakkaew/miniconda3/envs/edumat/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.patches

def plot_svm2d(X, f1, f2, y, svm):
    # create a predicted mesh
    s = 0.2
    x_min, x_max = X[f1].min() - 1, X[f1].max() + 1
    y_min, y_max = X[f2].min() - 1, X[f2].max() + 1
    xx, yy = np.meshgrid(np.arange(x_min, x_max, s), np.arange(y_min, y_max, s))
    df = {f1: xx.ravel(),f2: yy.ravel()}
    xy = pd.DataFrame(df)
    Z = svm.predict(xy)
    fig, ax = plt.subplots()
    
    # Fill the plot with predicted mesh
    levels, categories = pd.factorize(Z, sort=True)
    levels = levels.reshape(xx.shape)
    ax.contourf(xx, yy, levels, cmap=plt.cm.coolwarm, alpha=0.3)

    # data scatter plot
    levels, categories = pd.factorize(y, sort=True)
    handles = [matplotlib.patches.Patch(color=plt.cm.coolwarm.resampled(3)(i), label=c) for i, c in enumerate(categories)]
    ax.scatter(X[f1], X[f2], c=levels, cmap=plt.cm.coolwarm, edgecolors='black')
    ax.set_xlabel('bill_length_mm')
    ax.set_ylabel('flipper_length_mm')
    ax.set_title("SVM")
    ax.legend(handles=handles, title='Species')
    plt.show()

plot_svm2d(X_train, selected_features[0], selected_features[1], y_train, svm)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[15], line 29[0m
[1;32m     26[0m     ax[38;5;241m.[39mlegend(handles[38;5;241m=[39mhandles, title[38;5;241m=[39m[38;5;124m'[39m[38;5;124mSpecies[39m[38;5;124m'[39m)
[1;32m     27[0m     plt[38;5;241m.[39mshow()
[0;32m---> 29[0m [43mplot_svm2d[49m[43m([49m[43mX_train[49m[43m,[49m[43m [49m[43mselected_features[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[43mselected_features[49m[43m[[49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m[43m [49m[43my_train[49m[43m,[49m[43m [49m[43msvm[49m[43m)[49m

Cell [0;32mIn[15], line 12[0m, in [0;36mplot_svm2d[0;34m(X, f1, f2, y, svm)[0m
[1;32m     10[0m xy [38;5;241m=[39m pd[38;5;241m.[39mDataFrame(df)
[1;32m     11[0m Z [38;5;241m=[39m svm[38;5;241m.[39mpredict(xy)
[0;32m---> 12[0m fig, ax [38;5;241m=[39m [43mplt[49m[38;5;241m.[39msubplots()
[1;32m     14[0m [38;5;66;03m# Fill the plot with predicted mesh[39;00m
[1;32m     15[0m levels, categories [38;5;241m=[39m pd[38;5;241m.[39mfactorize(Z, sort[38;5;241m=[39m[38;5;28;01mTrue[39;00m)

[0;31mNameError[0m: name 'plt' is not defined
NameError: name 'plt' is not defined

